"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.arrCountOcc=(t,e)=>t.reduce(((t,r)=>r===e?t+1:t+0),0),exports.arrDeepFlatten=(t,e=1/0)=>t.flat(e),exports.arrDiff=(t,e)=>{const r=new Set(e);return t.filter((t=>!r.has(t)))},exports.arrDistinct=t=>[...new Set(t)],exports.arrIntersection=(t,e)=>{const r=new Set(e);return t.filter((t=>r.has(t)))},exports.arrMax=t=>Math.max(...t),exports.arrMin=t=>Math.min(...t),exports.arrNonUnique=t=>t.filter((e=>t.indexOf(e)!==t.lastIndexOf(e))),exports.arrNthElement=(t,e=0)=>e>=t.length?[]:(e>0?t.slice(e,e+1):t.slice(e))[0],exports.arrWithValues=(t,e=0)=>Array(t).fill(e),exports.dayOfYear=t=>Math.floor((t-new Date(t.getFullYear(),0,0))/864e5),exports.daysDiff=(t,e)=>Math.ceil(Math.abs(t-e)/864e5),exports.getSelectedText=()=>window.getSelection().toString(),exports.goToTop=()=>window.scrollTo(0,0),exports.is=(t,e)=>![,null].includes(e)&&e.constructor===t,exports.isArray=t=>Array.isArray(t),exports.isAscii=t=>/^[\x00-\x7F]+$/.test(t),exports.isBrowser=()=>![typeof window,typeof document].includes("undefined"),exports.isFunction=t=>["[object Function]","[object GeneratorFunction]","[object AsyncFunction]","[object Promise]"].includes(Object.prototype.toString.call(t)),exports.isHasWhitespace=t=>/\s/.test(t),exports.isHexColor=t=>/^#([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i.test(t),exports.isHexadecimal=t=>/^[A-F0-9]+$/i.test(t),exports.isInteger=t=>/^(-|\+)?\d+$/.test(t),exports.isNegativeNum=t=>/^-[1-9]\d*$/.test(t),exports.isNil=t=>null==t,exports.isNull=t=>null===t,exports.isNumber=t=>!isNaN(parseFloat(t))&&isFinite(t),exports.isObject=t=>null!==t&&"object"==typeof t,exports.isPlainObject=t=>!!t&&"object"==typeof t&&(null===t.__proto__||t.__proto__===Object.prototype),exports.isPositiveNum=t=>/^[1-9]\d*$/.test(t),exports.isPrime=t=>t>1&&Array(Math.floor(Math.sqrt(t))-1).fill(0).map(((t,e)=>e+2)).every((e=>t%e!=0)),exports.isRegExp=t=>"[object RegExp]"===Object.prototype.toString.call(t),exports.isString=t=>"[object String]"===Object.prototype.toString.call(t),exports.monthDiff=(t,e)=>Math.max(0,12*(e.getFullYear()-t.getFullYear())-t.getMonth()+e.getMonth()),exports.version="1.0.0";
